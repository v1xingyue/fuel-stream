/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.9
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { FuelStream } from "./FuelStream";

const bytecode = decompressBytecode("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");

export class FuelStreamFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, FuelStream.abi, accountOrProvider);
  }

  deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: FuelStream.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<FuelStream>> {
    const factory = new FuelStreamFactory(wallet);
    return factory.deploy(options);
  }
}
